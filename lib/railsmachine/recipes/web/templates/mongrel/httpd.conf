

<VirtualHost <%=  apache_ssl_enabled ?  apache_ssl_ip : "*" %>:80>
  ServerName <%=  apache_server_name %>
  <%  apache_server_aliases_array.each do |a| %>
  ServerAlias <%= "#{a}" %>
  <% end %>

  <IfModule passenger_module>
	  RailsAutoDetect off
	</IfModule>
	

  DocumentRoot <%= "#{current_path}/public" %>

  <Directory <%= "#{current_path}/public" %>>
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
  </Directory>

  # Configure mongrel_cluster 
  <Proxy balancer://<%= "#{application}_cluster" %>>
    <% start_port =  apache_proxy_port %>
    <% end_port =  apache_proxy_port +  apache_proxy_servers - 1 %>
    <% start_port.upto(end_port) do |port| %>
    BalancerMember http://<%= "#{ apache_proxy_address}:#{port.to_s}" %>
    <% end %>
  </Proxy>

  RewriteEngine On
  
  <% if  apache_ssl_enabled &&  apache_ssl_forward_all %>
  RewriteRule ^(.*)$ https://<%= domain %>$1
  <% end %>
  
  # Prevent access to .svn directories
  RewriteRule ^(.*/)?\.svn/ - [F,L]
  ErrorDocument 403 "Access Forbidden"

  # Check for maintenance file and redirect all requests
  RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
  RewriteCond %{SCRIPT_FILENAME} !maintenance.html
  RewriteRule ^.*$ /system/maintenance.html [L]

  # Rewrite index to check for static
  RewriteRule ^/$ /index.html [QSA] 

  # Rewrite to check for Rails cached page
  RewriteRule ^([^.]+)$ $1.html [QSA]

  # Redirect all non-static requests to cluster
  RewriteCond %{DOCUMENT_ROOT}/%{REQUEST_FILENAME} !-f
  RewriteRule ^/(.*)$ balancer://<%= "#{application}_cluster" %>%{REQUEST_URI} [P,QSA,L]
  
  # Deflate
  AddOutputFilterByType DEFLATE text/html text/plain text/xml
  BrowserMatch ^Mozilla/4 gzip-only-text/html
  BrowserMatch ^Mozilla/4\.0[678] no-gzip
  BrowserMatch \bMSIE !no-gzip !gzip-only-text/html

  ErrorLog logs/<%= domain %>-error_log
  CustomLog logs/<%= domain %>-access_log combined
</VirtualHost>

